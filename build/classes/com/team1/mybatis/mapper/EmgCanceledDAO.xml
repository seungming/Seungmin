<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team1.mybatis.IGradesDAO">

	<!-- 긴급돌봄 취소 목록 조회 --> 
	<select id="listEmgCanceled" resultType="com.team1.dto.EmgCanceledDTO">
		SELECT C.EMG_CANCELED_ID as emg_canceled_id , PR.NAME as name
		     , P.AMOUNT as amount, PU.POINT as point
		     , R.TYPE as type, C.CANCELED_DATE as canceled_date
		FROM EMG_CANCELED C
		JOIN REASONS_CANCELED R
		ON C.REASON_CANCELED_ID = R.REASON_CANCELED_ID
		JOIN EMG_PAY_REC P
		ON C.EMG_PAY_REC_ID = P.EMG_PAY_REC_ID
		JOIN EMG_POINT_USED PU
		ON P.EMG_PAY_REC_ID = PU.EMG_PAY_REC_ID
		JOIN EMG_REQ E
		ON P.EMG_REQ_ID = E.EMG_REQ_ID
		JOIN CHILD_BACKUP CB
		ON E.CHILD_BACKUP_ID = CB.CHILD_BACKUP_ID
		JOIN PAR_BACKUP PB
		ON CB.PAR_BACKUP_ID = PB.PAR_BACKUP_ID
		JOIN PAR_REG PR
		ON PB.PAR_BACKUP_ID = PR.PAR_BACKUP_ID
	</select>
	
	<!-- 긴급돌봄 취소 내역 찾기  -->
	<select id="searchEmgCanceled" resultType="com.team1.dto.EmgCanceledDTO">
		SELECT C.EMG_CANCELED_ID as emg_canceled_id , PR.NAME as name
		     , P.AMOUNT as amount, PU.POINT as point
		     , R.TYPE as type, C.CANCELED_DATE as canceled_date
		FROM EMG_CANCELED C
		JOIN REASONS_CANCELED R
		ON C.REASON_CANCELED_ID = R.REASON_CANCELED_ID
		JOIN EMG_PAY_REC P
		ON C.EMG_PAY_REC_ID = P.EMG_PAY_REC_ID
		JOIN EMG_POINT_USED PU
		ON P.EMG_PAY_REC_ID = PU.EMG_PAY_REC_ID
		JOIN EMG_REQ E
		ON P.EMG_REQ_ID = E.EMG_REQ_ID
		JOIN CHILD_BACKUP CB
		ON E.CHILD_BACKUP_ID = CB.CHILD_BACKUP_ID
		JOIN PAR_BACKUP PB
		ON CB.PAR_BACKUP_ID = PB.PAR_BACKUP_ID
		JOIN PAR_REG PR
		ON PB.PAR_BACKUP_ID = PR.PAR_BACKUP_ID
		WHERE E.EMG_REQ_ID = #{emg_req_id}
		AND 
		NOT EXISTS 
		(
		    SELECT 1
		    FROM EMG_CONFIRMED CF
		    WHERE CF.EMG_REQ_ID = E.EMG_REQ_ID
		)
		ORDER BY C.CANCELED_DATE DESC
		
	</select>
	
	<!-- 긴급돌봄 취소 데이터 추가 -->
	<insert id="insertEmgCanceled" parameterType="com.team1.dto.EmgCanceledDTO">
		INSERT INTO EMG_CANCELED VALUES(#{emg_canceled_id}, SYSDATE, NULL, #{reason_canceled_id}, #{emg_pay_rec_id});
	</insert>
	
	
	<!-- 긴급돌봄 취소 목록 갯수 -->
	<select id="countEmgCanceled" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM EMG_CANCELED
	</select>
	
	<!-- 긴급돌봄 환불 목록 조회  -->
	<select id="listEmgRefunded" resultType="com.team1.dto.EmgCanceledDTO">
		SELECT PR.NAME as name ,RF.EMG_REFUNDED_ID as refunded_id, RF.AMOUNT as amount
   		     , RF.POINT as point,RF.PG_CODE as pg_code, RF.REFUNDED_DATE as refunded_date
		FROM EMG_REFUNDED RF
		JOIN EMG_CANCELED C
		ON RF.EMG_CANCELED_ID = C.EMG_CANCELED_ID
		JOIN REASONS_CANCELED R
		ON C.REASON_CANCELED_ID = R.REASON_CANCELED_ID
		JOIN EMG_PAY_REC P
		ON C.EMG_PAY_REC_ID = P.EMG_PAY_REC_ID
		JOIN EMG_POINT_USED PU
		ON P.EMG_PAY_REC_ID = PU.EMG_PAY_REC_ID
		JOIN EMG_REQ E
		ON P.EMG_REQ_ID = E.EMG_REQ_ID
		JOIN CHILD_BACKUP CB
		ON E.CHILD_BACKUP_ID = CB.CHILD_BACKUP_ID
		JOIN PAR_BACKUP PB
		ON CB.PAR_BACKUP_ID = PB.PAR_BACKUP_ID
		JOIN PAR_REG PR
		ON PB.PAR_BACKUP_ID = PR.PAR_BACKUP_ID
		WHERE NOT EXISTS 
		(
		    SELECT 1
		    FROM EMG_CONFIRMED CF
		    WHERE CF.EMG_REQ_ID = E.EMG_REQ_ID
		)
		ORDER BY C.CANCELED_DATE DESC
		
	</select>
	
	<!-- 긴급돌봄 환불 내역 찾기  -->
	<select id="searchEmgRefunded" resultType="com.team1.dto.EmgCanceledDTO">
		SELECT PR.NAME as name ,RF.EMG_REFUNDED_ID as refunded_id, RF.AMOUNT as amount
		     , RF.POINT as point,RF.PG_CODE as pg_code, RF.REFUNDED_DATE as refunded_date
		FROM EMG_REFUNDED RF
		JOIN EMG_CANCELED C
		ON RF.EMG_CANCELED_ID = C.EMG_CANCELED_ID
		JOIN REASONS_CANCELED R
		ON C.REASON_CANCELED_ID = R.REASON_CANCELED_ID
		JOIN EMG_PAY_REC P
		ON C.EMG_PAY_REC_ID = P.EMG_PAY_REC_ID
		JOIN EMG_POINT_USED PU
		ON P.EMG_PAY_REC_ID = PU.EMG_PAY_REC_ID
		JOIN EMG_REQ E
		ON P.EMG_REQ_ID = E.EMG_REQ_ID
		JOIN CHILD_BACKUP CB
		ON E.CHILD_BACKUP_ID = CB.CHILD_BACKUP_ID
		JOIN PAR_BACKUP PB
		ON CB.PAR_BACKUP_ID = PB.PAR_BACKUP_ID
		JOIN PAR_REG PR
		ON PB.PAR_BACKUP_ID = PR.PAR_BACKUP_ID	
		WHERE RF.EMG_CANCELED_ID = #{emg_canceled_id}
		ORDER BY RF.REFUNDED_DATE DESC

	</select>
	
	<!-- 긴급돌봄 환불 데이터 추가 -->
	<insert id="insertEmgRefunded" parameterType="com.team1.dto.EmgCanceledDTO">
		INSERT INTO EMG_REFUNDED VALUES(#{emg_refunded_id}, #{amount}, SYSDATE, #{point}, #{pg_code}, NULL, #{emg_canceled_id});
	</insert>
	
	
	<!-- 긴급돌봄 환불 목록 갯수 -->
	<select id="countEmgRefunded" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM EMG_REFUNDED
	</select>
	
</mapper>
