<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team1.mybatis.IGradesDAO">

	<!-- 긴급돌봄 확정 리스트 조회 --> 
	<select id="listEmgConfirmed" resultType="com.team1.dto.EmgConfirmedDTO">
		SELECT CF.EMG_CONFIRMED_ID AS emg_confirmed_id, RQ.EMG_REQ_ID AS emg_req_id
		     , PR.NAME AS par_name, PB.PAR_BACKUP_ID AS par_backup_id
		     , SR.SIT_BACKUP_ID AS sit_backup_id, SR.NAME as sit_name, CF.PAR_READ_DATE AS par_read_date
  	     	 , RQ.REQ_DATE AS req_date, CF.CONFIRMED_DATE AS confirmed_date
		FROM EMG_CONFIRMED CF
        JOIN EMG_REQ RQ 
          ON CF.EMG_REQ_ID = RQ.EMG_REQ_ID
		JOIN CHILD_BACKUP CB 
		  ON RQ.CHILD_BACKUP_ID = CB.CHILD_BACKUP_ID
        JOIN PAR_BACKUP PB 
		  ON CB.PAR_BACKUP_ID = PB.PAR_BACKUP_ID
		JOIN PAR_REG PR 
		  ON PB.PAR_BACKUP_ID = PR.PAR_BACKUP_ID
		JOIN SIT_BACKUP SB
		  ON CF.SIT_BACKUP_ID = SB.SIT_BACKUP_ID
		JOIN SIT_REG SR
		  ON CF.SIT_BACKUP_ID = SR.SIT_BACKUP_ID
		WHERE NOT EXISTS 
		(
		    SELECT 1
		    FROM EMG_CANCELED CC
		    JOIN EMG_PAY_REC PAY 
		      ON CC.EMG_PAY_REC_ID = PAY.EMG_PAY_REC_ID
		   WHERE PAY.EMG_REQ_ID = RQ.EMG_REQ_ID
		)
		ORDER BY CF.CONFIRMED_DATE DESC
	</select>
	
	<!-- 긴급돌봄 확정 데이터 추가 -->
	<insert id="addEmgConfirmed" parameterType="com.team1.dto.EmgConfirmedDTO">
		INSERT INTO EMG_CONFIRMED VALUES (#{emg_confirmed_id}, SYSDATE, NULL, #{emg_req_id}, #{sit_backup_id});		
	</insert>

	
	<!-- 긴급돌봄 확정 부모 검색 -->
	<select id="searchEmgConfirmedPar" resultType="com.team1.dto.EmgConfirmedDTO">
		SELECT CF.EMG_CONFIRMED_ID AS emg_confirmed_id, RQ.EMG_REQ_ID AS emg_req_id
		     , PR.NAME AS par_name, PB.PAR_BACKUP_ID AS par_backup_id
		     , SR.SIT_BACKUP_ID AS sit_backup_id, SR.NAME as sit_name
		     , RQ.REQ_DATE AS req_date, CF.CONFIRMED_DATE AS confirmed_date
		FROM EMG_CONFIRMED CF
		JOIN EMG_REQ RQ 
		  ON CF.EMG_REQ_ID = RQ.EMG_REQ_ID
		JOIN CHILD_BACKUP CB 
		  ON RQ.CHILD_BACKUP_ID = CB.CHILD_BACKUP_ID
		JOIN PAR_BACKUP PB 
		  ON CB.PAR_BACKUP_ID = PB.PAR_BACKUP_ID
		JOIN PAR_REG PR 
		  ON PB.PAR_BACKUP_ID = PR.PAR_BACKUP_ID
		JOIN SIT_BACKUP SB
		  ON CF.SIT_BACKUP_ID = SB.SIT_BACKUP_ID
		JOIN SIT_REG SR
		  ON CF.SIT_BACKUP_ID = SR.SIT_BACKUP_ID
		WHERE NOT EXISTS 
		(
		    SELECT 1
		    FROM EMG_CANCELED CC
		    JOIN EMG_PAY_REC PAY 
		      ON CC.EMG_PAY_REC_ID = PAY.EMG_PAY_REC_ID
		   WHERE PAY.EMG_REQ_ID = RQ.EMG_REQ_ID
		)
		AND PB.PAR_BACKUP_ID = #{par_backup_id}
		ORDER BY CF.CONFIRMED_DATE DESC
	</select>
	
	<!-- 긴급돌봄 확정 시터 검색 -->
	<select id="searchEmgConfirmedSit" resultType="com.team1.dto.EmgConfirmedDTO">
		SELECT CF.EMG_CONFIRMED_ID AS emg_confirmed_id, RQ.EMG_REQ_ID AS emg_req_id
		     , PR.NAME AS par_name, PB.PAR_BACKUP_ID AS par_backup_id
		     , SR.SIT_BACKUP_ID AS sit_backup_id, SR.NAME as sit_name
		     , RQ.REQ_DATE AS req_date, CF.CONFIRMED_DATE AS confirmed_date
		FROM EMG_CONFIRMED CF
		JOIN EMG_REQ RQ 
		  ON CF.EMG_REQ_ID = RQ.EMG_REQ_ID
		JOIN CHILD_BACKUP CB 
		  ON RQ.CHILD_BACKUP_ID = CB.CHILD_BACKUP_ID
		JOIN PAR_BACKUP PB 
		  ON CB.PAR_BACKUP_ID = PB.PAR_BACKUP_ID
		JOIN PAR_REG PR 
		  ON PB.PAR_BACKUP_ID = PR.PAR_BACKUP_ID
		JOIN SIT_BACKUP SB
		  ON CF.SIT_BACKUP_ID = SB.SIT_BACKUP_ID
		JOIN SIT_REG SR
		  ON CF.SIT_BACKUP_ID = SR.SIT_BACKUP_ID
		WHERE NOT EXISTS 
		(
		    SELECT 1
		    FROM EMG_CANCELED CC
		    JOIN EMG_PAY_REC PAY 
		      ON CC.EMG_PAY_REC_ID = PAY.EMG_PAY_REC_ID
		   WHERE PAY.EMG_REQ_ID = RQ.EMG_REQ_ID
		)
		AND PB.PAR_BACKUP_ID = #{sit_backup_id}
		ORDER BY CF.CONFIRMED_DATE DESC
	</select>
	
		
	<!-- 긴급돌봄 확정 리스트 갯수 -->
	<select id="count" resultType="java.lang.Integer">
		SELECT COUNT(*) AS count
		FROM EMG_CONFIRMED
	</select>
	
	<!-- 긴급돌봄 확정 부모가 읽은 날짜 업데이트 -->
	<update id="updateReadDate" parameterType="com.team1.dto.EmgConfirmedDTO">
		UPDATE EMG_CONFIRMED CF
		SET CF.PAR_READ_DATE = SYSDATE
		WHERE EMG_CONFIRMED_ID = #{emg_confirmed_id};
	</update>
	
	
	
	<!-- 긴급돌봄 확정 후 시터 메모 리스트 조회 --> 
	<select id="listMemosSit" resultType="com.team1.dto.EmgConfirmedDTO">
		SELECT MS.EMG_MEMOS_SIT_ID as emg_memos_sit_id, SR.NAME as sit_name, MS.CONTENT as sit_content
    		 , MS.REC_DATE as sit_rec_date
		FROM EMG_MEMOS_SIT MS
		JOIN EMG_CONFIRMED CF
		  ON MS.EMG_CONFIRMED_ID = CF.EMG_CONFIRMED_ID
		JOIN SIT_BACKUP SB
		  ON CF.SIT_BACKUP_ID = SB.SIT_BACKUP_ID
		JOIN SIT_REG SR
		  ON CF.SIT_BACKUP_ID = SR.SIT_BACKUP_ID
	</select>
	
	<!-- 긴급돌봄 확정 후 시터 메모 데이터 추가 -->
	<insert id="addEmgMemoSit" parameterType="com.team1.dto.EmgConfirmedDTO">
		INSERT INTO EMG_MEMOS_SIT VALUES (#{emg_memo_sit_id}, SYSDATE, #{sit_contnet}, #{emg_confirmed_id});
	</insert>
	
	
	<!-- 긴급돌봄 확정 후 시터 메모 리스트 검색 -->
	<select id="searchEmgMemosSit" resultType="com.team1.dto.EmgConfirmedDTO">
		SELECT MS.EMG_MEMOS_SIT_ID as emg_memos_sit_id, SR.NAME as sit_name, MS.CONTENT as sit_content
		    , MS.REC_DATE as sit_rec_date
		FROM EMG_MEMOS_SIT MS
		JOIN EMG_CONFIRMED CF
		  ON MS.EMG_CONFIRMED_ID = CF.EMG_CONFIRMED_ID
		JOIN SIT_BACKUP SB
		  ON CF.SIT_BACKUP_ID = SB.SIT_BACKUP_ID
		JOIN SIT_REG SR
		  ON CF.SIT_BACKUP_ID = SR.SIT_BACKUP_ID
		WHERE MS.EMG_CONFIRMED_ID = #{emg_confirmed_id};
	</select>
	
	
	<!-- 긴급돌봄 확정 후 부모 메모 리스트 조회 --> 
	<select id="listMemosPar" resultType="com.team1.dto.EmgConfirmedDTO">
		SELECT MP.EMG_MEMOS_PAR_ID as emg_memos_par_id, PR.NAME as par_name
     		 , PB.PAR_BACKUP_ID AS par_backup_id, MP.CONTENT as par_content, MP.REC_DATE as par_rec_date
		FROM EMG_MEMOS_PAR MP
		JOIN EMG_CONFIRMED CF
		  ON MP.EMG_CONFIRMED_ID = CF.EMG_CONFIRMED_ID
		JOIN EMG_REQ RQ ON CF.EMG_REQ_ID = RQ.EMG_REQ_ID
		JOIN CHILD_BACKUP CB ON RQ.CHILD_BACKUP_ID = CB.CHILD_BACKUP_ID
		JOIN PAR_BACKUP PB ON CB.PAR_BACKUP_ID = PB.PAR_BACKUP_ID
		JOIN PAR_REG PR ON PB.PAR_BACKUP_ID = PR.PAR_BACKUP_ID
	</select>
	
	
	<!-- 긴급돌봄 확정 후 부모 메모 데이터 추가 -->
	<insert id="addEmgMemoPar" parameterType="com.team1.dto.EmgConfirmedDTO">
		INSERT INTO EMG_MEMOS_PAR VALUES (#{emg_memo_par_id}, SYSDATE, #{par_contnet}, #{emg_confirmed_id});
	</insert>
	
	<!-- 긴급돌봄 확정 후 부모 메모 리스트 검색 -->
	<select id="searchEmgMemosPar" resultType="com.team1.dto.EmgConfirmedDTO">
		SELECT MP.EMG_MEMOS_PAR_ID as emg_memos_par_id, PR.NAME as par_name
		     , PB.PAR_BACKUP_ID AS par_backup_id, MP.CONTENT as par_content, MP.REC_DATE as par_rec_date
		FROM EMG_MEMOS_PAR MP
		JOIN EMG_CONFIRMED CF
		  ON MP.EMG_CONFIRMED_ID = CF.EMG_CONFIRMED_ID
		JOIN EMG_REQ RQ ON CF.EMG_REQ_ID = RQ.EMG_REQ_ID
		JOIN CHILD_BACKUP CB ON RQ.CHILD_BACKUP_ID = CB.CHILD_BACKUP_ID
		JOIN PAR_BACKUP PB ON CB.PAR_BACKUP_ID = PB.PAR_BACKUP_ID
		JOIN PAR_REG PR ON PB.PAR_BACKUP_ID = PR.PAR_BACKUP_ID
		WHERE CF.EMG_CONFIRMED_ID = #{emg_confirmed_id}
	</select>
	
	<!-- 긴급돌봄 임급 지급 내역 리스트 조회 -->
	<select id="listEmgWage" resultType="com.team1.dto.EmgConfirmedDTO">
		SELECT EW.EMG_WAGE_ID as emg_wage_id, SB.SIT_BACKUP_ID AS sit_backup_id, SR.NAME as sit_name, EW.WAGE as wage, EW.BANK_NAME as bank_name
    	 	 , EW.ACCT_NUMBER as acct_number, PAID_DATE as paid_date
		FROM EMG_WAGE EW
		JOIN EMG_CONFIRMED CF
		  ON EW.EMG_CONFIRMED_ID = CF.EMG_CONFIRMED_ID
		JOIN SIT_BACKUP SB
		  ON CF.SIT_BACKUP_ID = SB.SIT_BACKUP_ID
		JOIN SIT_REG SR
		  ON CF.SIT_BACKUP_ID = SR.SIT_BACKUP_ID
	</select>
	
	<!-- 긴급돌봄 임급 지급 내역 리스트 검색 -->
	<select id="updateReadDate" resultType="com.team1.dto.EmgConfirmedDTO">
		SELECT EW.EMG_WAGE_ID as emg_wage_id, CF.EMG_CONFIRMED_ID AS emg_confirmed_id, CF.CONFIRMED_DATE AS confirmed_date
		     , SB.SIT_BACKUP_ID AS sit_backup_id, SR.NAME as sit_name, EW.WAGE as wage, EW.BANK_NAME as bank_name
		     , EW.ACCT_NUMBER as acct_number, PAID_DATE as paid_date
		FROM EMG_WAGE EW
		JOIN EMG_CONFIRMED CF
		  ON EW.EMG_CONFIRMED_ID = CF.EMG_CONFIRMED_ID
		JOIN SIT_BACKUP SB
		  ON CF.SIT_BACKUP_ID = SB.SIT_BACKUP_ID
		JOIN SIT_REG SR
		  ON CF.SIT_BACKUP_ID = SR.SIT_BACKUP_ID
		WHERE CF.EMG_CONFIRMED_ID = #{emg_confirmed_id};
	</select>
		

	<!-- 긴급돌봄 임금 지급 내역 데이터 추가 -->
	<insert id="addEmgWage" parameterType="com.team1.dto.EmgConfirmedDTO">
		INSERT INTO EMG_WAGE VALUES (#{emg_wage_id}, #{wage}, SYSDATE, #{emg_confirmed_id}, #{acct_number}, #{bank_name});
	</insert>

</mapper>
